name: nightly test
on:
  # makes workflow reusable
  workflow_call:
    inputs:
      gitref:
        description: "git commit hash or branch name"
        type: string
        required: true
      test_label:
        description: "requested runner label"
        type: string
        required: true
      python:
        description: "python version, e.g. 3.10.12"
        type: string
        required: true
      timeout:
        description: "time limit for run in minutes "
        type: string
        required: true
      whl:
        description: "whl to test (variable appears late binding so unusable outside 'download artifact')"
        type: string
        required: true

  # makes workflow manually callable
  workflow_dispatch:
    inputs:
      gitref:
        description: "git commit hash or branch name"
        type: string
        required: true
      test_label:
        description: "requested runner label"
        type: string
        required: true
      python:
        description: "python version, e.g. 3.10.12"
        type: string
        required: true
      timeout:
        description: "time limit for run in minutes "
        type: string
        required: true
      whl:
        description: "whl to test (variable appears late binding so unusable outside 'download artifact')"
        type: string
        required: true

jobs:

    TEST:

        name: TEST (${{ inputs.python}}, ${{ inputs.test_label }})
        runs-on: ${{ inputs.test_label }}
        timeout-minutes: ${{ fromJson(inputs.timeout) }}
        permissions:
            contents: 'read'
            id-token: 'write'

        steps:

            - name: set python
              id: set_python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ inputs.python }}

            - name: verify python
              id: verify_python
              uses: neuralmagic/nm-actions/actions/verify-python@v1.2.0
              with:
                  python-version: ${{ inputs.python }}

            - name: checkout code
              id: checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ inputs.gitref }}

            - name: create virtualenv
              id: create_venv
              uses: neuralmagic/nm-actions/actions/create-virtualenv@v1.2.0
              with:
                  venv: TEST

            - name: download whl
              id: download
              uses: actions/download-artifact@v4
              with:
                  name: ${{ inputs.whl }}
                  path: ${{ inputs.whl }}

            - name: run tests
              id: test
              uses: ./.github/actions/test/
              with:
                  venv: ${{ steps.create_venv.outputs.penv }}
                  suitename: test-${{ inputs.python }}-${{ inputs.test_label }}

            - name: summary
              uses: neuralmagic/nm-actions/actions/summary-test@v1.13.0
              if: success() || failure()
              with:
                  test_label: ${{ inputs.test_label }}
                  gitref: ${{ inputs.gitref }}
                  python: ${{ inputs.python }}
                  whl: ${{ inputs.whl }}
                  test_status: ${{ steps.test.outputs.status }}

            # GCP
            - name: 'Authenticate to Google Cloud'
              id: auth
              uses: google-github-actions/auth@v2.1.3
              with:
                  project_id: ${{ secrets.GCP_PROJECT }}
                  workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
                  service_account: ${{ secrets.GCP_GHA_SA }}

            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
              with:
                  version: '>= 473.0.0'

            - name: copy results to GCP
              run: |
                  gcloud storage cp test-results/report.xml ${{ secrets.GCP_BUILD_ML_ASSETS2 }}/${{ github.run_id }}/test-results/report-${{ inputs.test_label }}.xml

            - name: upload results
              uses: actions/upload-artifact@v4
              if: success() || failure()
              with:
                  name: report-${{ inputs.test_label }}.xml
                  path: test-results/report.xml
                  retention-days: 5
