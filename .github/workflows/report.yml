name: report test results to reportportal
run-name: ${{ github.actor }} report results for run ${{ inputs.run_id }}
on:

    workflow_call:
        inputs:
            label:
                description: "requested runner label (specifies instance)"
                type: string
                required: true
            timeout:
                description: "time limit for run in minutes "
                type: string
                required: true
            run_id:
                description: "run_id of 'build.yml' run that generated the assets"
                type: string
                required: true
            wheel:
                description: wheel used for testing
                type: string
                required: true
            run_name:
                description: name of the test run
                type: string
                required: true
            wf_category:
                description: "categories: NIGHTLY, RELEASE"
                type: string
                default: NIGHTLY
            gitref:
                description: "git commit hash or branch name"
                type: string
                default: main

    workflow_dispatch:
        inputs:
            label:
                description: "requested runner label (specifies instance)"
                type: string
                required: true
            timeout:
                description: "time limit for run in minutes "
                type: string
                required: true
            run_id:
                description: "run_id of 'build.yml' run that generated the assets"
                type: string
                required: true
            wheel:
                description: wheel used for testing
                type: string
                required: true
            run_name:
                description: name of the test run
                type: string
                required: true
            wf_category:
                description: "categories: NIGHTLY, RELEASE"
                type: string
                default: NIGHTLY
            gitref:
                description: "git commit hash or branch name"
                type: string
                default: main

jobs:

    REPORT:
        runs-on: ${{ inputs.label }}
        timeout-minutes: ${{ fromJson(inputs.timeout) }}

        permissions:
            contents: 'read'
            id-token: 'write'

        steps:

            - name: checkout code
              id: checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ inputs.gitref }}

            - name: 'Authenticate to Google Cloud'
              id: auth-gcp
              uses: google-github-actions/auth@v2.1.3
              with:
                  project_id: ${{ secrets.GCP_PROJECT }}
                  workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
                  service_account: ${{ secrets.GCP_GHA_SA }}

            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
              with:
                  version: '>= 473.0.0'

            - name: download assets
              uses: neuralmagic/nm-actions/actions/gcp-download-assets@v1.1.0
              with:
                bucket_source: ${{ secrets.GCP_BUILD_ML_ASSETS2 }}
                run_id: ${{ inputs.run_id }}

            - name: generate metadata info
              id: generate-metadata
              run: |
                jq --raw-output -n '{
                  "hostname": "${{ secrets.REPORTPORTAL_HOST }}",
                  "project": "compressed-tensors",
                  "name": "${{ inputs.run_name }}",
                  "description": "GitHub run: https://github.com/neuralmagic/compressed-tensors/actions/runs/${{ inputs.run_id }}",
                  "attributes": [
                    {"key": "wheel", "value": "${{ inputs.wheel }}"},
                    {"key": "gitref", "value": "${{ inputs.gitref }}"},
                    {"key": "workflow category", "value": "${{ inputs.wf_category }}"}
                  ]
                }' > metadata.json
                METADATA_FILEPATH=`realpath metadata.json`
                echo "metadata_filepath=${METADATA_FILEPATH}" | tee -a $GITHUB_OUTPUT
              shell: bash

            - name: report to reportportal
              uses: neuralmagic/nm-actions/actions/reportportal_submit_execution_results@v1.15.0
              with:
                droute_username: ${{ secrets.DROUTE_USERNAME }}
                droute_password: ${{ secrets.DROUTE_PASSWORD }}
                droute_url: ${{ secrets.DROUTE_URL}}
                metadata_filepath: ${{ steps.generate-metadata.outputs.metadata_filepath }}
