name: debug workflow
on:

  push:
    branches:
      - infraupdate

  # makes workflow manually callable
  workflow_dispatch:
    inputs:
      gitref:
        description: "git commit hash or branch name"
        type: string
        required: true
      test_label:
        description: "requested runner label"
        type: string
        required: true
      python:
        description: "python version, e.g. 3.10.12"
        type: string
        required: true
      timeout:
        description: "time limit for run in minutes "
        type: string
        required: true
      run_id:
        description: run id of the BUILD job that generated the assets
        type: string

jobs:

    DEBUG:

        name: DEBUG (${{ inputs.python}}, ${{ inputs.test_label }})
        runs-on: ${{ inputs.test_label || 'gcp-k8s-vllm-util' }}
        timeout-minutes: ${{ fromJson('60') }}
        permissions:
            contents: 'read'
            id-token: 'write'
        env:
            HF_HOME: /model-cache
            HF_TOKEN: ${{ secrets.HF_RED_HAT_READ_ONLY }}
            PYTHON_VERSION: ${{ inputs.python || '3.12' }}
            GITREF: ${{ inputs.gitref || 'main' }}
            RUNID: ${{ inputs.run_id || '18690758970' }}

        steps:

            - name: set python
              id: set_python
              uses: actions/setup-python@v6
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: verify python
              id: verify_python
              uses: neuralmagic/nm-actions/actions/verify-python@v1.2.0
              with:
                  python-version: ${{ env.PYTHON_VERSION }}

            - name: install system dependencies
              run: |-
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends g++ gcc make
              shell: bash

            - name: checkout code
              id: checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ env.GITREF }}

            - name: create virtualenv
              id: create_venv
              uses: neuralmagic/nm-actions/actions/create-virtualenv@v1.2.0
              with:
                  venv: TEST

            # GCP
            - name: 'Authenticate to Google Cloud'
              id: auth
              uses: google-github-actions/auth@v2.1.3
              with:
                  project_id: ${{ secrets.GCP_VLLM_PROJECT }}
                  workload_identity_provider: ${{ secrets.GCP_VLLM_PROJECT_WORKLOAD_IDENTITY_PROVIDER }}
                  service_account: ${{ secrets.GCP_VLLM_PROJECT_GHA_SA }}

            - name: 'Set up Cloud SDK'
              uses: 'google-github-actions/setup-gcloud@v2'
              with:
                  version: '>= 473.0.0'

            - name: download assets
              if: ${{ env.RUNID != '' }}
              uses: neuralmagic/nm-actions/actions/gcp-download-assets@v1.1.0
              with:
                  bucket_source: ${{ secrets.GCP_VLLM_PROJECT_BUILD_ASSETS }}
                  run_id: ${{ env.RUNID }}

            - name: Wait for debugging
              run: |
                  echo "‚è≥ Waiting forever until the job times out..."
                  while true; do
                      sleep 60s
                  done
